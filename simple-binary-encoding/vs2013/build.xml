<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="RunTests" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\.build</MSBuildCommunityTasksPath>
  </PropertyGroup>

  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets"/>

  <PropertyGroup Condition=" '$(BUILD_NUMBER)' == '' "> 
    <Version>1.0.0.0</Version>
    <FileVersion>1.0.0.0</FileVersion>
    <InformationalVersion>1.0.0.0</InformationalVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BUILD_NUMBER)' != '' ">
    <Version>$(BUILD_NUMBER)</Version>
    <FileVersion>$(BUILD_NUMBER)</FileVersion>
    <InformationalVersion>$(BUILD_NUMBER)</InformationalVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BuildConfiguration)' == '' ">
    <BuildConfiguration>Release</BuildConfiguration>
  </PropertyGroup>

  <ItemGroup>
    <DirsToClean Include="..\target\main\csharp\bin\" />
    <DirsToClean Include="..\target\main\csharp\obj\" />
    <DirsToClean Include="..\target\test\csharp\bin\" />
    <DirsToClean Include="..\target\test\csharp\obj\" />
    <DirsToClean Include="..\target\examples\csharp\bin\" />
    <DirsToClean Include="..\target\examples\csharp\obj\" />
  </ItemGroup>
  <Target Name="Clean">
    <RemoveDir Directories="@(DirsToClean)" />
  </Target>

  <Target Name="Version">
    <Time>
      <Output TaskParameter="Year" PropertyName="Year" />
    </Time>

    <Message Text="Version: $(Version)"/>

    <Attrib Files="$(MSBuildProjectDirectory)\GlobalAssemblyInfo.cs" ReadOnly="False" />

    <AssemblyInfo CodeLanguage="CS"
                  OutputFile="$(MSBuildProjectDirectory)\GlobalAssemblyInfo.cs"
                  GenerateClass="false"
                  AssemblyCopyright="Copyright © Adaptive $(Year). All rights reserved."
                  AssemblyConfiguration="$(BuildConfiguration)"
                  AssemblyVersion="$(Version)"
                  AssemblyFileVersion="$(FileVersion)"
                  AssemblyInformationalVersion="$(InformationalVersion)" />
  </Target>

  <!-- Projects to Build -->
  <ItemGroup>
    <ProjectFiles Include="$(MSBuildProjectDirectory)\vs2013.sln">
      <Properties>Configuration=$(BuildConfiguration)</Properties>
    </ProjectFiles>
  </ItemGroup>

  <Target Name="Compile" DependsOnTargets="Version">
    <MSBuild Projects="@(ProjectFiles)" />
  </Target>

  <ItemGroup>
    <TestProjects Include="..\target\test\csharp\bin\$(BuildConfiguration)\Adaptive.SimpleBinaryEncoding.Tests.dll" />
  </ItemGroup>
  <Target Name="RunTests" DependsOnTargets="CIBuild">
    <NUnit   Assemblies="@(TestProjects)"
        ToolPath=".\packages\NUnit.Runners.lite.2.6.3.20131019\"
        OutputXmlFile="$(NUnitResultsFile)"
    />
  </Target>

  <!-- This target uses SbeTool to generate the SBE IR stubs used for the OTF decoder. SbeTool needs to be available in target\dist folder (requires to run the main Ant "dist" target). -->
  <Target Name="GenerateIR">
    <Message Text="Generating SBE IR stubs..." Importance="high" />
    <Exec Command="java -Dsbe.output.dir=..\main\csharp\ir\generated -Dsbe.target.language=CSHARP -Dsbe.target.namespace=Adaptive.SimpleBinaryEncoding.Ir.Generated -jar ..\target\dist\sbe.jar ..\main\resources\sbe-ir.xml" />
  </Target>

  <!-- This target uses SbeTool to generate the SBE IR stubs used for the OTF decoder. SbeTool needs to be available in target\dist folder (requires to run the main Ant "dist" target). -->
  <Target Name="GenerateExamples">
    <Message Text="Generating stubs for example project..." Importance="high" />
    <Exec Command="java -Dsbe.output.dir=..\examples\csharp\generated_stub\generated -Dsbe.target.language=CSHARP -Dsbe.target.namespace=Adaptive.SimpleBinaryEncoding.Examples.Generated -jar ..\target\dist\sbe.jar ..\examples\resources\example-schema.xml" />

    <Message Text="Generating serialized IR for OTF encoder example..." Importance="high" />
    <Exec Command="java -Dsbe.output.dir=..\examples\csharp\Otf\ -Dsbe.generate.stubs=false -Dsbe.generate.ir=true -jar ..\target\dist\sbe.jar ..\examples\resources\example-schema.xml" />
  </Target>

  <!-- This target uses SbeTool to generate the SBE stubs for FIX messages required to run the performance tests -->
  <Target Name="GeneratePerfTestStubs">
    <Message Text="Generating stubs for perf tests..." Importance="high" />
    <Exec Command="java -Dsbe.output.dir=..\perf\csharp\Adaptive.SimpleBinaryEncoding.PerfTests\Bench\SBE\FIX -Dsbe.target.language=CSHARP -Dsbe.target.namespace=Adaptive.SimpleBinaryEncoding.PerfTests.Bench.SBE.FIX -jar ..\target\dist\sbe.jar ..\perf\resources\sbe\fix-message-samples.xml" />
  </Target>

  <!-- This target uses SbeTool to generate the SBE stubs for FIX messages used to validate that SbeTool generates valide C# -->
  
  <!-- TODO enable once we get latest XML from CME -->
  <Target Name="GenerateCmeFix">
    <!--<Message Text="Generating stubs for CME FIX messages..." Importance="high" />
    <Exec Command="java -Dsbe.output.dir=..\test\csharp\Generated -Dsbe.target.language=CSHARP -Dsbe.target.namespace=Adaptive.SimpleBinaryEncoding.Tests.Generated -jar ..\target\dist\sbe.jar ..\test\csharp\Generated\templates_FIXBinary.xml" />-->
  
  </Target>

  <Target Name="CIBuild" DependsOnTargets="GenerateIR;GenerateExamples;GeneratePerfTestStubs;GenerateCmeFix;Compile"/>
  
  <!-- Following targets are supposed to be called from the main build file (Ant)-->
  <ItemGroup>
    <PackageVersionAssembly Include="..\target\dist\csharp\lib\net40\SBE.dll"/>
    <NuSpecFile Include=".\.nuget\SBE.nuspec"/>
  </ItemGroup>

  <PropertyGroup>
    <DistributionDirectory>..\target\dist\csharp\</DistributionDirectory>
    <BuildOutputDirectory>..\target\csharp\Release</BuildOutputDirectory>
  </PropertyGroup>

  <Target Name="Package">
    <RemoveDir Directories="$(DistributionDirectory)" />

    <ItemGroup>
      <BuildOutputFiles Include="$(BuildOutputDirectory)\SBE.dll"/>
      <BuildOutputFiles Include="$(BuildOutputDirectory)\SBE.pdb"/>
      <BuildOutputFiles Include="$(BuildOutputDirectory)\SBE.xml"/>
    </ItemGroup>

    <Copy SourceFiles="@(BuildOutputFiles)" DestinationFolder="$(DistributionDirectory)\lib\net40" />
    <Copy SourceFiles="$(DistributionDirectory)\..\sbe.jar" DestinationFolder="$(DistributionDirectory)\tools" />
    <Copy SourceFiles=".nuget\GenerateSampleCode.bat" DestinationFolder="$(DistributionDirectory)\sample"/>
    <Copy SourceFiles=".nuget\readme.txt" DestinationFolder="$(DistributionDirectory)"/>
    <Copy SourceFiles="..\examples/resources/example-schema.xml" DestinationFolder="$(DistributionDirectory)\sample"/>
    <Copy SourceFiles="..\examples\csharp\generated_stub\ExampleUsingGeneratedStub.cs" DestinationFolder="$(DistributionDirectory)\sample"/>

    <GetAssemblyIdentity AssemblyFiles="@(PackageVersionAssembly)">
      <Output TaskParameter="Assemblies" ItemName="AssemblyIdentity" />
    </GetAssemblyIdentity>
    <XmlUpdate
       XmlFileName="@(NuSpecFile)"
       XPath="/package/metadata/version"
       Value="%(AssemblyIdentity.Version)" />

    <Exec Command=".nuget\nuget.exe pack .nuget\sbe.nuspec -OutputDirectory $(DistributionDirectory)" />
  </Target>

  <Target Name="Publish">
    <GetAssemblyIdentity AssemblyFiles="@(PackageVersionAssembly)">
      <Output TaskParameter="Assemblies" ItemName="AssemblyIdentity" />
    </GetAssemblyIdentity>
    <Exec Command=".nuget\nuget.exe push ..\target\dist\csharp\Adaptive.SBE.%(AssemblyIdentity.Version)-beta.nupkg" />
  </Target>
</Project>